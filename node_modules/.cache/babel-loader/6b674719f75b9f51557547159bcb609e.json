{"ast":null,"code":"var _jsxFileName = \"/home/codecrunch/Documents/react/context-api/src/use-call-back/hello.js\";\nimport React, { useState, useCallback } from 'react';\nimport Index from '.';\n\nconst Hello = () => {\n  const [count, setCount] = useState(0);\n  const increament = useCallback(n => {\n    setCount(c => c + n);\n  }, [setCount]);\n  const multipy = useCallback(() => {\n    setCount(c => c * 2);\n  });\n  return React.createElement(React.Fragment, null, React.createElement(Index, {\n    increament: increament,\n    multipy: multipy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Count ==>  \", count));\n};\n\nexport default Hello;","map":{"version":3,"sources":["/home/codecrunch/Documents/react/context-api/src/use-call-back/hello.js"],"names":["React","useState","useCallback","Index","Hello","count","setCount","increament","n","c","multipy"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,GAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMM,UAAU,GAAGL,WAAW,CAAEM,CAAD,IAAO;AAClCF,IAAAA,QAAQ,CAACG,CAAC,IAAIA,CAAC,GAAGD,CAAV,CAAR;AACH,GAF6B,EAE3B,CAACF,QAAD,CAF2B,CAA9B;AAIA,QAAMI,OAAO,GAAGR,WAAW,CAAC,MAAM;AAC9BI,IAAAA,QAAQ,CAACG,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAR;AACH,GAF0B,CAA3B;AAIA,SACI,0CACI,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAEF,UAAnB;AAA+B,IAAA,OAAO,EAAEG,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACgBL,KADhB,CAFJ,CADJ;AAQH,CAnBD;;AAqBA,eAAeD,KAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport Index from '.';\n\nconst Hello = () => {\n    const [count, setCount] = useState(0);\n\n    const increament = useCallback((n) => {\n        setCount(c => c + n);\n    }, [setCount])\n\n    const multipy = useCallback(() => {\n        setCount(c => c * 2);\n    })\n\n    return (\n        <>\n            <Index increament={increament} multipy={multipy} />\n            <div>\n                Count ==>  {count}\n            </div>\n        </>\n    )\n}\n\nexport default Hello;"]},"metadata":{},"sourceType":"module"}